name: 'Setup pnpm with cache'
description: 'Setup Node.js, pnpm, and restore cache'
inputs:
  node-version:
    description: 'Node.js version to use'
    required: false
    default: '22.x'
  save-cache:
    description: 'Whether to save the cache (only on main branch)'
    required: false
    default: 'false'
  registry-url:
    description: 'NPM registry URL'
    required: false
    default: ''
  skip-cache-restore:
    description: 'Skip restoring pnpm cache (when using artifacts)'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        registry-url: ${{ inputs.registry-url }}

    - name: Enable Corepack
      shell: bash
      run: corepack enable

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: echo "pnpm_cache_dir=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

    - name: Restore pnpm cache
      if: inputs.skip-cache-restore != 'true'
      uses: actions/cache/restore@v4
      with:
        path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
        key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          pnpm-store-${{ runner.os }}-

    - name: Install dependencies
      shell: bash
      run: pnpm install --frozen-lockfile

    - name: Save pnpm cache
      if: inputs.save-cache == 'true'
      uses: actions/cache/save@v4
      with:
        path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
        key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

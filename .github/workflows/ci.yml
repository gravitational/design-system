name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: 22.x

jobs:
  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v5

      - name: Setup pnpm with cache
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ env.NODE_VERSION }}
          save-cache: ${{ github.ref == 'refs/heads/main' }}

      - name: Upload dependencies
        uses: actions/upload-artifact@v4
        with:
          name: node-modules
          path: |
            node_modules
            **/node_modules
          retention-days: 1

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout branch
        uses: actions/checkout@v5

      - name: Download dependencies
        uses: actions/download-artifact@v4
        with:
          name: node-modules

      - name: Setup pnpm
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ env.NODE_VERSION }}
          skip-install: true

      - name: Build
        run: pnpm build

  lint:
    name: Linting
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout branch
        uses: actions/checkout@v5

      - name: Download dependencies
        uses: actions/download-artifact@v4
        with:
          name: node-modules

      - name: Setup pnpm
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ env.NODE_VERSION }}
          skip-install: true

      - name: Generate theme types
        run: pnpm generate-theme

      - name: Type Check
        run: pnpm type-check

      - name: Lint
        run: pnpm lint

  generate:
    runs-on: ubuntu-latest
    name: Generate
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Download dependencies
        uses: actions/download-artifact@v4
        with:
          name: node-modules

      - name: Setup pnpm
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ env.NODE_VERSION }}
          skip-install: true

      - run: pnpm generate
      - name: Check for Changes
        run: |
          if [[ $(git status --porcelain) ]]; then
            echo "Changes detected in generated files. Please commit the changes."
            git status
            exit 1
          else
            echo "No changes detected in generated files."
          fi

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout branch
        uses: actions/checkout@v5

      - name: Download dependencies
        uses: actions/download-artifact@v4
        with:
          name: node-modules

      - name: Setup pnpm
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ env.NODE_VERSION }}
          skip-install: true

      - name: Install Playwright Browsers
        run: pnpm exec playwright install

      - name: Test
        run: pnpm test
